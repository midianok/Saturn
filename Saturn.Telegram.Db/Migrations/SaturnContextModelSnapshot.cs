// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Saturn.Telegram.Db;

#nullable disable

namespace Saturn.Bot.Service.Database.Migrations
{
    [DbContext(typeof(SaturnContext))]
    partial class SaturnContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Saturn.Bot.Service.Database.Entities.MessageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint")
                        .HasColumnName("chat_id");

                    b.Property<string>("ChatName")
                        .HasColumnType("text")
                        .HasColumnName("chat_name");

                    b.Property<int>("ChatType")
                        .HasColumnType("integer")
                        .HasColumnName("chat_type");

                    b.Property<string>("FromFirstName")
                        .HasColumnType("text")
                        .HasColumnName("from_first_name");

                    b.Property<string>("FromLastName")
                        .HasColumnType("text")
                        .HasColumnName("from_last_name");

                    b.Property<long?>("FromUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("from_user_id");

                    b.Property<string>("FromUsername")
                        .HasColumnType("text")
                        .HasColumnName("from_username");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("message_date");

                    b.Property<string>("StickerId")
                        .HasColumnType("text")
                        .HasColumnName("sticker_id");

                    b.Property<string>("Text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<string>("UpdateData")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("update_data");

                    b.HasKey("Id")
                        .HasName("pk_messages");

                    b.HasIndex("ChatId")
                        .HasDatabaseName("ix_messages_chat_id");

                    b.HasIndex("FromUserId")
                        .HasDatabaseName("ix_messages_from_user_id");

                    b.ToTable("messages", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
